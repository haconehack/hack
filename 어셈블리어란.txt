
어셈블리어 x86 32bit 강의 노트

[어셈블리어]
어셈블리어는 기계어 코드(Machine Code)를 1:1에 대응하는 코드(instruction)으로 
작성하고 어셈블링(Assembling)해서 객체 파일(.o)를 만들고, 링커(Linker) 프로그램으로
실행 가능한 형태로 시스템 실행 파일인 (.exe 또는 elf 형식 파일(리눅스의 경우))를 만들어
서 실행하는 저수준 언어(low level language)를 말한다.

(1) .as(또는 .S, .asm) -(어셈블링)-> 
(2) .o -(링킹)-> .exe(PE32)/executable(실행 가능 파일) 


[x86]
인텔 마이크로 프로세서를 x86이라고 하고, 32비트 프로세서(CPU)를 말한다.

[기본 문법]

MOV, ADD, DEC, INC, DEC, SHL, SHR, CMP, CMPB, JMP, RET, RETN, SYSENTER,
INT, CALL, JE, JNE, JZ, JNZ, JA, JLE, JBE, JB, JL, JLE, PUSH, POP, LEA,
NOP, CLR, or, xor, not, cli, sti.

위에 나열한 어셈블리어 명령어들을 거의 다 배운다면 어셈블리 기초를 배웠다고 할 수 있겠다.

[결론]
어셈블리어는 외우기 쉬운 언어적 특성이 있고, C와 같은 상위언어와 달리 소스 코드가 길어져서
개발하기가 어려운 면이 있는 반면, 컴퓨터에 관심이 많은 사람들이 특히 배우게 되고
해커들도 리버싱을 위해서 배우게 된다. 따라서 어셈블리를 배우면 어셈블리로된 바이너리 코드를
테스트할 수 있고, 리버싱을 통한 하이브리드 분석을 통해서 IDA Pro나 Ollydbg, Windbg로
보안 취약점을 다룰 수 있겠다. 

연구원인 리서처가 되려고 하면, 꼭 어셈블리어를 익혀야 보고되고 공유되는 자료 중 MS 제품군을 
분석할 수 있다. MS는 오픈소스가 아니라 클로즈드 소스이기 때문에 디버깅을 통한 분석이 반드시 
뒤따른다. 

열심히 공부하셔서 소스 코드 많이 분석해 보세요~
도움이 되실 겁니다.

x90 a.k.a 해커.

